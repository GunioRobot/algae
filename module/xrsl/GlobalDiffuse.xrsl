<?xml version="1.0" encoding="UTF-8"?>
<rsl name="GlobalDiffuse" type="surface">
	<icon>anm_GlobalDiffuse.xpm</icon>
	<description>Final Gathering surface. Direct and Cs is from bake file. Indirect is by point-based indirectdiffuse().
	radiosity is ( direct + indirect ) * cs. output direct, indirect, occlusion as well.</description>
	<parameter name="irradianceFile" type="string" value="nil">
		<detail value="connection"/>
	</parameter>
	<parameter name="bias" type="float" value="0.01">
		<detail value="simple"/>
	</parameter>
	<parameter name="bakeToFile" type="string" value="nil">
		<detail value="connection"/>
	</parameter>
	<source>
	normal Nn = normalize(N);
	color irr = 0;
	float occ = 0;
	if(irradianceFile != "nil") {
		irr = indirectdiffuse(P+ Nn * bias, Nn, 0, "pointbased", 1, "filename", irradianceFile,
                            "hitsides", "front",
                            "clamp", 1,
                            "sortbleeding", 1,
                            "maxdist", 1e15, "falloff", 0,
                            "falloffmode", 0,
                            "samplebase", 0, "bias", 0,
                            "maxsolidangle", 0.05);
                occ = occlusion(P+ Nn * bias, Nn, 0, "pointbased", 1, "filename", irradianceFile,
                      "hitsides", "front",
                      "clamp", 1,
                      "maxdist", 1e15, "falloff", 0,
                      "falloffmode", 0,
                      "samplebase", 0, "bias", 0,
                      "maxsolidangle", 0.05);

	}

	Oi = Os;
	Ci = Oi * irr;
	
	if(bakeToFile != "nil") {
		bake3d(bakeToFile, "_occlusion,_indirect", P, Nn, "interpolate", 1,
              "_occlusion", occ, "_indirect", irr);
	}
	</source>
</rsl>
