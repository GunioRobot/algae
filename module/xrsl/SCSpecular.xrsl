<?xml version="1.0" encoding="UTF-8"?>
<rsl name="SCSpecular" type="color">
	<icon>anm_SCSpecular.xpm</icon>
	<description>Cook-Torrance shading model. output color _specular.</description>
	<parameter name="specularColor" type="color" value="1.000000 1.000000 1.000000">
		<detail value="connection"/>
	</parameter>
	<parameter name="IOR" type="float" value="1.4">
		<access value="simple"/>
	</parameter>
	<parameter name="roughness" type="float" value="0.2">
		<access value="simple"/>
	</parameter>
	<parameter name="gaussConstant" type="float" value="100">
		<access value="simple"/>
	</parameter>
	<parameter name="_specular" type="color" value="0.000000 0.000000 0.000000">
		<access value="output"/>
	</parameter>
	<source>
	extern point P;
	extern normal N;
	extern vector I;
	normal Nn = normalize(N);
	vector Vn = normalize(-I);
	float F, Ktransmit;
	float m = roughness;
	fresnel( normalize(I), Nn, 1/IOR, F, Ktransmit);
	
	color cook = 0;
	float NdotV = Nn.Vn;
	
	illuminance( P, Nn, PI/2 ){
//half angle vector
	vector Ln = normalize(L);
	vector H = normalize(Vn+Ln);
      
	float NdotH = Nn.H;
	float NdotL = Nn.Ln;
	float VdotH = Vn.H;
      
	float D;
	float alpha = acos(NdotH);
      
//microfacet distribution
	D = gaussConstant*exp(-(alpha*alpha)/(m*m));
      
//geometric attenuation factor
	float G = min(1, min((2*NdotH*NdotV/VdotH), (2*NdotH*NdotL/VdotH)));
      
//sum contributions
	cook += Cl*(F*D*G)/(PI*NdotV);			
	}
	cook = cook/PI;
	_specular = cook;
	return _specular;
	</source>
</rsl>
