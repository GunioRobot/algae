<?xml version="1.0" encoding="UTF-8"?>
<rsl name="SCReflection" type="color">
	<icon>anm_SCReflection.xpm</icon>
	<description>Reflection shading model. Environment map will be used if hit nothing. Space is shapeName of delight coordinate system. Zero Index-Of-Refraction means mirror reflection. IOR over 1.0 is freshnel reflection. output color _reflect. </description>
	<parameter name="samples" type="float" value="8.0">
		<detail value="simple"/>
	</parameter>
	<parameter name="blur" type="float" value="1.0">
		<detail value="simple"/>
	</parameter>
	<parameter name="environmentMap" type="string" value="nil">
		<detail value="connection"/>
	</parameter>
	<parameter name="K_envmap" type="float" value="1.0">
		<detail value="simple"/>
	</parameter>
	<parameter name="space" type="string" value="delightCoordinateSystemShape1">
		<detail value="simple"/>
	</parameter>
	<parameter name="IOR" type="float" value="1.4">
		<access value="simple"/>
	</parameter>
	<parameter name="_reflect" type="color" value="0.000000 0.000000 0.000000">
		<access value="output"/>
	</parameter>
	<source>
	extern point P;
	extern normal N;
	extern vector I;
	normal Nn = normalize(N);
	vector In = normalize(I);
	vector Vn = normalize(-I);
	float radblur = radians(blur);
	_reflect = 0;
	if( Nn.Vn > 0.0 ) {
    		vector dir = reflect(In,Nn);
    		vector rw = vtransform( space, dir);
    		color hitcolor = 0;
    		gather( "", P, dir, radblur, samples, "surface:Ci", hitcolor) {
    			_reflect += hitcolor;
    		}
    		else {
    			if( environmentMap != "nil" ) _reflect += environment( environmentMap, rw ) * K_envmap;
    		}
    		_reflect = _reflect / samples;
    	}
    	if( IOR > 0.0 ) {
    		float Kr, Kt;
    		fresnel( In, Nn, 1/IOR, Kr, Kt);
    		_reflect *= Kr;
    	}
	return _reflect;
	</source>
</rsl>
